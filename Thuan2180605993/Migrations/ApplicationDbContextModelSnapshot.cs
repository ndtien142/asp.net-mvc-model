// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thuan2180605993.Data;

#nullable disable

namespace Thuan2180605993.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Admin", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passwords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Banner", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Brand", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("MenuID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MenuID");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Customer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passwords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Item", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("BrandID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateImport")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ItemTypeID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PurcharsePrice")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("ShortTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TypeID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.HasIndex("ItemTypeID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.ItemType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("MenuID")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MenuID");

                    b.ToTable("ItemType");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Menu", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Order", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deliverydate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deliverystatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Orderdate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Totalprice")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.OrderDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("Totalprice")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("ID");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Payment", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Payprices")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Brand", b =>
                {
                    b.HasOne("Thuan2180605993.Models.Entites.Menu", "Menu")
                        .WithMany("Brands")
                        .HasForeignKey("MenuID");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Item", b =>
                {
                    b.HasOne("Thuan2180605993.Models.Entites.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID");

                    b.HasOne("Thuan2180605993.Models.Entites.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.ItemType", b =>
                {
                    b.HasOne("Thuan2180605993.Models.Entites.Menu", "Menu")
                        .WithMany("ItemTypes")
                        .HasForeignKey("MenuID");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Order", b =>
                {
                    b.HasOne("Thuan2180605993.Models.Entites.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.OrderDetail", b =>
                {
                    b.HasOne("Thuan2180605993.Models.Entites.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("Thuan2180605993.Models.Entites.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Payment", b =>
                {
                    b.HasOne("Thuan2180605993.Models.Entites.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Thuan2180605993.Models.Entites.Menu", b =>
                {
                    b.Navigation("Brands");

                    b.Navigation("ItemTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
